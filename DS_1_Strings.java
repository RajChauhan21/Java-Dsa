package dsa;import java.lang.StringBuilder;import java.util.Scanner;public class DS_1_Strings {    public static  char[] reversestr(){        Scanner scn = new Scanner(System.in);        System.out.println("Enter the size of the char array");        int a = scn.nextInt();        System.out.println("Enter the String");        String er = scn.next();        char[] cr = new char[a];        for(int i = 0; i < er.length(); i++){            cr[i] = er.charAt(i);        }        int last = cr.length-1;        int first = 0;        while(first<last){            char temp =  cr[first];            cr[first] = cr[last];            cr[last] = temp;            first++;            last--;        }        return cr;    }    public static void main(String[] args) {//        String name = "Raj";//        String name1 = "Ram";//        if(name.compareTo(name1) == 0){ //name.compareTo(name1) - This func returns int value//            System.out.println("Strings are equal");//        }//        else {//            System.out.println("Strings are not equal");//        }        // STRING BUILDER IS THE ADVANCED VERSION OF STRINGS (SAME AS ARRAYS - ARRAYLIST)        StringBuilder sb = new StringBuilder("mahindra");//        System.out.println(sb.charAt(6));//        System.out.println(sb.substring(2,6));//        System.out.println(sb.delete(1,4));//Removes the characters in a substring of this sequence.//        System.out.println(sb.deleteCharAt(5));//Removes the char at the specified position in this sequence.//        System.out.println(sb.capacity());//Returns the current capacity.//        System.out.println(sb.indexOf("a",2));//returns the index of a char from given index//        System.out.println(sb.insert(0,"raj"));//Inserts the string into this character sequence.//       sb.setCharAt(1,'r');//        System.out.println(sb);//replaces the char at 1 and set's 'r'//        sb.append("Scorpio"); //inserts the element at the last//        System.out.println(sb.length());          //Reverse a string//         String cr = "babbba";//         for(int i=cr.length()-1;i>=0;i--){//             System.out.print(cr.charAt(i) + " ");//         }       // String is palindrome or not//        int i = 0;////        while(i<cr.length()-1){//            char first = cr.charAt(i);//            char last = cr.charAt(cr.length()-i-1);//            if(first==last){//                i++;//            }//            if(first==last){//                System.out.println("String is palindrome");//                break;//            }//            else {//                System.out.println("String is not palindrome");//                break;//            }////        }//        int a = 'A'; // ASCII value of 'A' is 65////        a = a + 2; // 2 will be added in the 65//        System.out.println(a);////        char b = 65; //returns the Char which is present at ASCII value 65//        System.out.println(b);        //change each char to opposite case's , means UPPERCASE=====>LOWERCASE AND LOWERCASE=====>UPPERCASE        //AlgoPreP=====>aLGOpREp//        Scanner scn = new Scanner(System.in);//        System.out.println("Enter the size of the char array");//        int a = scn.nextInt();//        char[] xr = new char[a];//        System.out.println("Enter the the string");//        String cr = scn.next();//        //hence strings are immutable and cannot be changed, so we have to put values of strings into char array//        for(int i = 0 ; i<cr.length(); i++) {//            xr[i] = cr.charAt(i);//        }//        for(char v:xr){//            System.out.print(v + " ");//        }//        System.out.println();////        for(int i = 0 ;i<xr.length;i++){//            if(xr[i]>=65 && xr[i]<=90){ //for uppercase//                xr[i] = (char)(xr[i] + 32);//            }//            else {//                xr[i] = (char)(xr[i]-32);//            }//        }////        for(char z:xr){//            System.out.print(z + " ");//        }       // Reverse the array of string//        System.out.println(reversestr());//        Scanner scn = new Scanner(System.in);//        System.out.println("Enter the size of the char array");//        int a = scn.nextInt();//        System.out.println("Enter the String");//        String er = scn.next();//        char[] cr = new char[a];//        for(int i = 0; i < er.length(); i++){//            cr[i] = er.charAt(i);//        }//        int last = cr.length-1;//        int first = 0;////       while(first<last){//            char temp =  cr[first];//            cr[first] = cr[last];//            cr[last] = temp;//            first++;//            last--;////       }//       for(int j = 0 ; j<cr.length; j++){//           System.out.print(cr[j] + " ");//       }//        String fc = "Raj";//         fc = fc + "a"; // so we can't insert or remove elements in the String but we can add the char's at//        // last and at front//        System.out.println(fc);//        Write a program to find the first and the last occurence of the//        letter 'o' and character ',' in "Hello, World".    int first = -1;    int last = -1;    String fr = "Hello World";    char find = 'o';    for(int i = 0; i < fr.length(); i++){        if(fr.charAt(i) == find){            if(first == -1){                first = i;            }            else {                last = i;            }        }    }        System.out.println("First Occurrence is on " + first);        System.out.println("Last Occurrence is on" + last);    }}